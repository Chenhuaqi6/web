CSS
1.Cascading style sheet 层叠样式表,修饰和美化页面元素,实现页面的排版和布局
2.css使用方式
    1.行内样式/内联样式
        语法:通过标签属性style,为元素设置css样式
        注:css样式声明是由css的属性和值组成的
            例:
                <h1 style="CSS属性名:值;"> 内容</h1>
            常用css属性 :
                1.文本颜色 color 取颜色值(英文单词)
                2.背景颜色 background-color 取颜色值
                3.字体大小 font-size 取像素值
    2.文档内嵌
        语法:使用<style></style>标签引入css代码,实现样式与结构的分离
        例如:
            <style>
                css选择器{
                    属性:值;
                    属性:值;
                }

            </style>
            <h1></h1>
            <p></p>
        
        注:
            1.css选择器主要用来匹配页面中的元素为其设置样式
            2.<style></style>
            标签可以书写在文档的任意位置,书写任意次,一般遵循"样式优先"的原则
    3.外链方式
        1.在html文件中使用外部的样式表文件,css文件以.css为后缀,文件中直接使用选择器书写样式,在html中使用<link>标签
        引入
        2.外链方式真正实现结构与样式的分离,实现样式的复用

3.样式表特征
    1.层叠性
        不同的样式在同一个元素上共同起作用
    2.继承性
        css某些样式可以被子元素或后代元素继承
        例: 大部分的文本样式;
            块元素默认与父元素宽度保持一致
    3.样式表的优先级
        元素发生样式冲突时最终选择用哪一种样式,由样式表的优先级决定
        1.行内样式优先级最高 (style属性定义的样式)
        例如:
            <h1 style="color:red;"> 这是行内样式 优先级最高
            超链接不继承行内样式,继承内嵌的后来者
        
        2.文档内嵌和外链样式优先级低于行内样式,发生冲突时考虑代码的书写顺序,后来者居上
        3.浏览器默认样式优先级最低(user agent style)


4.css 选择器
    1.作用:选择页面中哪些元素应用样式
    2.分类:
        1.标签选择器/元素选择器
            1.作用:
                根据指定的标签名匹配文档中所用的该元素
            2.语法:
                标签名{
                    属性:值;
                    属性:值;
                    ....
                }
            3.练习:
                创建文件,添加超链接标签
                设置超链接文本色为红色,取消下划线(text-decoration:on;))

        2. id 选择器
            1.作用:根据标签的id 属性值选择元素
            2.id属性具有唯一性,不能重复
            3.id属性值命名规范 : 自定义,尽量见名知意
            可以由数字,字母,下划线组成,禁止以数字开头

            4.语法:
                id选择器以#开头,后跟id属性值,用于匹配文档中唯一的元素
                例:
                    #定义的id值{
                        样式声明
                    }
                    <标签 id="">
            5.练习:
                创建文件 id-selector.html
                添加div标签,文本内容不限
                设置div 200*200 尺寸,背景色自选
                width: 200px;
                height:200px;
        
        3.class选择器/类选择器
            1.作用:根据标签的class属性值匹配元素
            2.特点:类选择器定义的样式可以实现复用,类名可在多个元素中重复使用,命名规范参照id属性值
            3.语法:
                类选择器以英文 . 开头,后跟class属性值
                例如:
                     .c1{
                         color:red;
                         font-size:32px;
                     }
                     <h2 class="c1"></h2>
            4.练习:
                创建class-selector.html
                添加标签  p span div 
                通过类选择器为元素统一设置样式
                200*200 文本色 背景色 字体大小
            5.特殊用法
                1.标签选择器与类选择器组合使用,注意标签名在前,类名在后
                    例:
                        div.d1{

                        }
                    表示匹配类名为d1的div元素 (也就是说只能div调用这个)

                    
                    类器的组合使用(不多见)    
                        .c1.c2
                2.class属性只能写一个,但属性值可以取多个,属性值之间使用使用空格隔开,与类选择器 一一对应,应用格式
                    例:
                        <div class="c1 c2"></div>
        4.群组选择器
            1.作用:为一组元素统一设置样式
            2.语法:
                选择器1,选择器2,选择器3....{

                }
        
        5.后代选择器(后代都给))
            1.语法:
                选择器1 选择器2{

                }
            2.作用:
                在选择器1对应的元素下,查找所用满足选择器2的后代元素
        6.子代选择器(只给儿子):
            1.语法:
                父名     子名
                选择器1>选择器2{

                }
                查找直接子元素
        7.伪类选择器
            1.作用:针对元素的不同状态设置样式
            2.分类:
                1.超链接伪类选择器
                    针对超链接访问前和访问后俩种状态分别设置样式
                    访问前:link
                    访问后:visited
                2.动态伪类选择器
                    :hover 表示鼠标滑过/悬停时的状态
                    :active 表示激活(鼠标点按不抬起)状态
                    :focus
                    文本输入框获取焦点时的状态(编辑状态)
                

                练习超链接四种状态的样式
                伪类选择器必须与其他选择器结合使用
                a:link{

                }
                a:visited{
                    }
                a:hover{

                }
                a:active{

                }
                3.使用:
                    伪类选择器必须与其他选择器结合使用,表示某种状态
                    例:
                        a:link{

                        }
                        #d1:hover{

                        }
                4.如果需要为超链接添加四种状态样式,需要固定书写顺序:
                    LoVe/HAte  爱恨原则
                    :link
                    :visited
                    :hover
                    :active
    3.选择器优先级
        在使用选择器为元素设置样式,发生冲突时,最终选用哪一个选择器的样式,取决于选择器的权重
        权重:权值,使用数字来标明选择器的优先级,数字越大,优先级越高
        选择器                      权重
        标签选择器                    1
        类/伪类                      10
        id选择器                     100
        行内样式                     1000
        注:
            1.组合选择器(后代,子代,伪类),权重为各个选择器权值之和
            2.群组选择器权重不累加,单独看每个选择器的权重
        
        练习:
            创建div id为nav,表示导航栏
            div中嵌套若干a标签,表示导航项
            div:宽高,背景色
            a:取消下划线,修改默认颜色,鼠标悬停修改a标签的文本色和背景色

5.HTML 的标签分类
    1.块元素:独占一行,不与其他元素共行,可以设置宽高
    例: div p h1 table ul ol form li
    注:除table外所用的块元素默认宽度与父元素(body)保持一致,高度由内容决定

    2.行内元素:
        可以与其他元素共行显示,不能手动调整宽高
    例: a span label i b strong u s sub sup

    3.行内块元素:
      既可以共行显示,又可以设置宽高
      例如:
        img input button
    
        注:行内块元素是特殊的行内元素,默认垂直方向上,以文本底部对齐显示(基线对齐)
        可以通过属性 vertical-align 调整行内元素的垂直对齐方式,常用于调整行内块元素垂直对齐问题
        取值:top / middle / bottom / baseline(默认值)
